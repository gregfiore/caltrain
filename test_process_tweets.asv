station_aliases = cell(29,1);

station_aliases{1,1} = {'Gilroy'};
station_aliases{2,1} = {'San Martin','sanmartin'};
station_aliases{3,1} = {'Morgan Hill','morganhill'};
station_aliases{4,1} = {'Blossom Hill','blossomhill'};
station_aliases{5,1} = {'Capitol'};
station_aliases{6,1} = {'Tamien'};
station_aliases{7,1} = {'San Jose','sanjose','SJ','SJD','diridon'};
station_aliases{8,1} = {'College Park','CP','collegepark'};
station_aliases{9,1} = {'Santa Clara','santaclara'};
station_aliases{10,1} = {'Lawrence','law'};
station_aliases{11,1} = {'Sunnyvale','Svl','sv'};
station_aliases{12,1} = {'Mountain View','MV','Mt View','Mtn View','MtView','mtv','mtnview','mountainview'};
station_aliases{13,1} = {'San Antonio','SA','san ant','sanantonio'};
station_aliases{14,1} = {'California Ave','Cal Ave','CalAve','californiaave'};
station_aliases{15,1} = {'Palo Alto','PA','university','paloalto'};
station_aliases{16,1} = {'Menlo Park','MP','Menlo'};
station_aliases{17,1} = {'Redwood City','RC','RWC','redwood'};
station_aliases{18,1} = {'San Carlos','SC','SNC','SCar','SCarlos','sancarlos'};
station_aliases{19,1} = {'Belmont'};
station_aliases{20,1} = {'Hillsdale','HD'};
station_aliases{21,1} = {'Hayward Park','HP','haywardpark','hayyard'};
station_aliases{22,1} = {'San Mateo','SMateo','SM','sanmateo'};
station_aliases{23,1} = {'Burlingame','bvrlingame','bgame','brlngame'};
station_aliases{24,1} = {'Millbrae','MB','Milbrae','millbrea','mil'};
station_aliases{25,1} = {'San Bruno','sanbruno'};
station_aliases{26,1} = {'South San Francisco','So. San Francisco'};
station_aliases{27,1} = {'Bayshore'};
station_aliases{28,1} = {'22nd Street','22nd'};
station_aliases{29,1} = {'San Francisco','SF',' King','4th'};  

critical_incidents{1,1} = {'fatality','fatalities','fatal','killed','suicide'};
critical_incidents{2,1} = {'indicent','accident','struck'};
critical_incidents{3,1} = {'indefinitely','cancel','severe'};                     


if 0 
    filename = 'CT Data.xlsx';
    % Load EXCEL data
    [num, txt, raw] = xlsread(filename);
end

if 1
    
    % Load in the train data
    fid = fopen('CaltrainStations.txt','rt');
    stations = {};
    n_stations = 0;
    while feof(fid) == 0
        stations = [stations; fgetl(fid)];
        n_stations = n_stations + 1;
    end
    fclose(fid);
    
    disp('Successfully loaded the Caltrain Stations')
    
    fid = fopen('CaltrianNBSchedule.bin','r');
    fseek(fid,0,1); n_bytes = ftell(fid);  fseek(fid,0,-1);
    n_stops = (n_bytes/8)/(n_stations+1);
    [nb,count] = fread(fid,[n_stops,n_stations+1],'double');
    fclose(fid);

    nb_sched = nb(:,2:end);
    nb_trains = num2str(nb(:,1));
    clear nb
    
    fid = fopen('CaltrianSBSchedule.bin','r');
    fseek(fid,0,1); n_bytes = ftell(fid);  fseek(fid,0,-1);
    n_stops = (n_bytes/8)/(n_stations+1);
    [sb,count] = fread(fid,[n_stops,n_stations+1],'double');
    fclose(fid);
    
    sb_sched = sb(:,2:end);
    sb_trains = num2str(sb(:,1));
    clear sb
end


temp = cell(length(raw),9);
% 1:  Date
% 2:  Original Tweet
% 3:  Associated Station
% 4:  Station Association Score
% 5:  Train number
% 6:  Direction
% 7:  Train/dir score
% 8:  Critical Incident
% 9:  Incident score

for i = 1:length(raw)
    temp{i,1} = raw{i,1};
    temp{i,2} = raw{i,2};
    
    %%%%%%%%%%%%%%%%%%%%%%%
    % Station recognition %
    %%%%%%%%%%%%%%%%%%%%%%%
    
    temp{i,4} = 0;
    found_flag = [0, 0, 0];
    for j = 1:length(station_aliases)
        for k = 1:length(station_aliases{j,1})
            idx = strfind(lower(raw{i,2}),lower(station_aliases{j}{k}));
            if idx
                idx = idx(1);
                % figure out if this really is a station
                % capitalization is good
                if strfind(raw{i,2},upper(station_aliases{j}{k}))
                    found_flag(1) = 5;
                end
                % longer names are more reliable
                if length(station_aliases{j}{k}) > 4
                    found_flag(1) = found_flag(1) + length(station_aliases{j}{k});
                end
                
                % preceding spaces are good
                if idx == 1
                    found_flag(1) = found_flag(1) + 3;
                elseif raw{i,2}(idx-1) == ' ';
                    found_flag(1) = found_flag(1) + 3;
                end
                
                % following spaces, commas or periods are even better
                if strfind(' ,.\;)"&',raw{i,2}(idx+length(station_aliases{j}{k})))
                    found_flag(1) = found_flag(1) + 5;
                end
               
                if found_flag(1) > temp{i,4} && found_flag(1) > 3
%                     disp(raw{i,2})
%                     disp(['Station ',station_aliases{j}{k},' has score ',num2str(found_flag(1))])
                    temp{i,4} = found_flag(1);
                    temp{i,3} = station_aliases{j}{1};
                    
                end
                found_flag(1) = 0;
            end
        end
    end
    
    %%%%%%%%%%%%%%%%%%%%%
    % Train recognition %
    %%%%%%%%%%%%%%%%%%%%%
    
    temp{i,7} = 0;
    % Look at northbound leg first
    for j = 1:length(nb_trains)
        idx = strfind(raw{i,2},nb_trains(j,:));
        if idx
            idx = idx(1);  % use the first one...
            found_flag(2) = found_flag(2) + 5;
        else
            idx = strfind(raw{i,2},nb_trains(j,2:3));
            if idx
                idx = idx(1);
                found_flag(2) = found_flag(2) + 3;
            end
        end
        
        if found_flag(2)
            if idx > 3
                if strcmpi(raw{i,2}(idx-3:idx-2),'nb')
                    found_flag(2) = found_flag(2) + 5;
                elseif strcmpi(raw{i,2}(idx-2:idx-1),'nb')
                    found_flag(2) = found_flag(2) + 5;
                end
            elseif idx > 2
                if strcmpi(raw{i,2}(idx-2:idx-1),'nb')
                    found_flag(2) = found_flag(2) + 5;
                end
            end
        elseif strfind(raw{i,2},'nb')
            found_flag(2) = found_flag(2) + 1;
        elseif strfind(raw{i,2},'NB')
            found_flag(2) = found_flag(2) + 2;
        end
        
        if found_flag(2) > 2 && found_flag(2) > temp{i,7}
            temp{i,6} = 'NB';
            temp{i,5} = str2double(nb_trains(j,:));
            temp{i,7} = found_flag(2);
        end        
        found_flag(2) = 0;
    end
    
    
    % Look at southbound leg
    for j = 1:length(sb_trains)
        idx = strfind(raw{i,2},sb_trains(j,:));
        if idx
            found_flag(2) = found_flag(2) + 5;
        else
            idx = strfind(raw{i,2},nb_trains(j,2:3));
            found_flag(2) = found_flag(2) + 3;
        end
        
        if found_flag
            if idx > 3
                if strcmpi(raw{i,2}(idx-3:idx-2),'sb')
                    found_flag(2) = found_flag(2) + 5;
                elseif strcmpi(raw{i,2}(idx-2:idx-1),'sb')
                    found_flag(2) = found_flag(2) + 5;
                end
            elseif idx > 2
                if strcmpi(raw{i,2}(idx-2:idx-1),'sb')
                    found_flag(2) = found_flag(2) + 5;
                end
            end
        elseif strfind(raw{i,2},'sb')
            found_flag(2) = found_flag(2) + 1;
        elseif strfind(raw{i,2},'SB')
            found_flag(2) = found_flag(2) + 2;
        end
        
        if found_flag(2) > 2 && found_flag(2) > temp{i,7}
            temp{i,6} = 'SB';
            temp{i,5} = str2double(sb_trains(j,:));
            temp{i,7} = found_flag(2);
            found_flag(2) = 0;
        end
        found_flag(2) = 0;
    end
    
    if temp{i,7} <= 3
        temp{i,5} = [];
        temp{i,6} = [];
    end
    
    %%%%%%%%%%%%%%%%%%%%%
    % Critical Incident %
    %%%%%%%%%%%%%%%%%%%%%
    
    temp{i,9} = 0;
    for j = 1:length(critical_incidents)
        for k = 1:length(critical_incidents{j,1})
            idx = strfind(lower(raw{i,2}),lower(station_aliases{j}{k}));
            if idx
                idx = idx(1);
    
    
    
end

% bad_idx = [];
% for i = 1:length(temp)
%     if temp{i,4} < 5
%         bad_idx = [bad_idx; i];
%     end
% end
% 
% temp2 = temp(bad_idx,2:4);
